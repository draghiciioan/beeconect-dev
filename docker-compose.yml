
networks:
  beeconect:
    driver: bridge

volumes:
  postgres_auth_data:
  postgres_customers_data:
  redis_data:
  rabbitmq_data:

services:
  traefik:
    image: traefik:v3.0
    command:
      - "--api.insecure=true"
      - "--providers.docker=true"
      - "--providers.docker.exposedbydefault=false"
      - "--entrypoints.web.address=:80"
    ports:
      - "80:80"
      - "8080:8080"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
    networks:
      - beeconect

  postgres-auth:
    image: postgres:15-alpine
    environment:
      POSTGRES_DB: auth_db
      POSTGRES_USER: auth_user
      POSTGRES_PASSWORD: auth_pass_123
    volumes:
      - postgres_auth_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    networks:
      - beeconect

  postgres-customers:
    image: postgres:15-alpine
    environment:
      POSTGRES_DB: bee_customers
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    volumes:
      - postgres_customers_data:/var/lib/postgresql/data
    ports:
      - "5433:5432"
    networks:
      - beeconect

  redis:
    image: redis:7-alpine
    volumes:
      - redis_data:/data
    ports:
      - "6379:6379"
    networks:
      - beeconect

  rabbitmq:
    image: rabbitmq:3-management-alpine
    environment:
      RABBITMQ_DEFAULT_USER: admin
      RABBITMQ_DEFAULT_PASS: admin
    ports:
      - "15672:15672"
      - "5672:5672"
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq
    networks:
      - beeconect

  auth-service:
    build:
      context: ../microservicii/bee_auth_services
      dockerfile: Dockerfile
    ports:
      - "8001:8000"
    environment:
      - ENVIRONMENT=development
      - DATABASE_URL=postgresql://auth_user:auth_pass_123@postgres-auth:5432/auth_db
      - SECRET_KEY=${JWT_SECRET_KEY:-dev-jwt-secret-key-123}
      - JWT_ALGORITHM=HS256
      - TOKEN_EXPIRATION_SECONDS=7200
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - REDIS_DB=0
      - RABBITMQ_URL=amqp://admin:admin@rabbitmq:5672/
      - CORS_ORIGINS=http://localhost:3000,http://localhost:8080,http://localhost:3001
      - ENABLE_METRICS=true
      - DEBUG=true
    networks:
      - beeconect
    depends_on:
      - postgres-auth
      - redis
      - rabbitmq
      
  customers-service:
    build:
      context: ../microservicii/bee_customers_service
      dockerfile: Dockerfile
    ports:
      - "8016:8007"
    environment:
      - ENVIRONMENT=development
      - DATABASE_URL=postgresql://postgres:postgres@postgres-customers:5432/bee_customers
      - RABBITMQ_URL=amqp://admin:admin@rabbitmq:5672/
      - RABBITMQ_EXCHANGE=bee.customers.events
      - LOG_SERVICE_URL=http://localhost:8100/logs
      - CUSTOMER_PATCH_RATE=5/minute
      - CORS_ORIGINS=http://localhost:3000,http://localhost:8080,http://localhost:3001
      - DEBUG=true
    networks:
      - beeconect
    depends_on:
      - postgres-customers
      - rabbitmq
      
  web-service:
    build:
      context: ../microservicii/bee_web_service
      dockerfile: Dockerfile
    ports:
      - "3001:80"
    environment:
      - NODE_ENV=development
      - VITE_AUTH_API_URL=http://localhost:8001
      - VITE_CUSTOMERS_API_URL=http://localhost:8016
    networks:
      - beeconect
    depends_on:
      - auth-service
      - customers-service
      
